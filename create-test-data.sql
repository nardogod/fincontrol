-- Script SQL para criar dados de teste
-- Execute no Supabase SQL Editor

-- 1. Criar usu√°rio de teste (desabilitar RLS temporariamente)
ALTER TABLE public.users DISABLE ROW LEVEL SECURITY;

-- Inserir usu√°rio de teste
INSERT INTO public.users (id, email, full_name, created_at, updated_at)
VALUES (
  '00000000-0000-0000-0000-000000000001',
  'teste@fincontrol.com',
  'Usu√°rio Teste',
  NOW(),
  NOW()
);

-- Reabilitar RLS
ALTER TABLE public.users ENABLE ROW LEVEL SECURITY;

-- 2. Criar conta para o usu√°rio
INSERT INTO public.accounts (name, type, color, icon, description, user_id)
VALUES (
  'Conta Principal',
  'personal',
  '#3B82F6',
  'üè¶',
  'Conta principal para testes',
  '00000000-0000-0000-0000-000000000001'
);

-- 3. Criar transa√ß√µes de teste
INSERT INTO public.transactions (type, amount, description, transaction_date, account_id, category_id, created_via)
VALUES 
  -- Receitas
  (
    'income',
    5000,
    'Sal√°rio mensal',
    CURRENT_DATE,
    (SELECT id FROM public.accounts WHERE user_id = '00000000-0000-0000-0000-000000000001' LIMIT 1),
    (SELECT id FROM public.categories WHERE name = 'Sal√°rio' LIMIT 1),
    'web'
  ),
  (
    'income',
    1200,
    'Freelance',
    CURRENT_DATE,
    (SELECT id FROM public.accounts WHERE user_id = '00000000-0000-0000-0000-000000000001' LIMIT 1),
    (SELECT id FROM public.categories WHERE name = 'Freelance' LIMIT 1),
    'web'
  ),
  -- Despesas
  (
    'expense',
    800,
    'Compras no supermercado',
    CURRENT_DATE,
    (SELECT id FROM public.accounts WHERE user_id = '00000000-0000-0000-0000-000000000001' LIMIT 1),
    (SELECT id FROM public.categories WHERE name = 'Alimenta√ß√£o' LIMIT 1),
    'web'
  ),
  (
    'expense',
    200,
    'Combust√≠vel',
    CURRENT_DATE,
    (SELECT id FROM public.accounts WHERE user_id = '00000000-0000-0000-0000-000000000001' LIMIT 1),
    (SELECT id FROM public.categories WHERE name = 'Transporte' LIMIT 1),
    'web'
  ),
  (
    'expense',
    150,
    'Cinema',
    CURRENT_DATE,
    (SELECT id FROM public.accounts WHERE user_id = '00000000-0000-0000-0000-000000000001' LIMIT 1),
    (SELECT id FROM public.categories WHERE name = 'Lazer' LIMIT 1),
    'web'
  );

-- 4. Verificar dados criados
SELECT 
  'Usu√°rios' as tabela,
  COUNT(*) as total
FROM public.users
UNION ALL
SELECT 
  'Contas' as tabela,
  COUNT(*) as total
FROM public.accounts
UNION ALL
SELECT 
  'Transa√ß√µes' as tabela,
  COUNT(*) as total
FROM public.transactions;

-- 5. Mostrar transa√ß√µes criadas
SELECT 
  t.type,
  t.amount,
  t.description,
  c.name as categoria,
  a.name as conta
FROM public.transactions t
JOIN public.categories c ON t.category_id = c.id
JOIN public.accounts a ON t.account_id = a.id
ORDER BY t.created_at DESC;
